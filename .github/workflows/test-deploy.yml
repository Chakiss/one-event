name: Test Deploy to GCP

on:
  workflow_dispatch:

env:
  PROJECT_ID: one-event-production
  REGION: asia-southeast1
  REPOSITORY: one-event-repo

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      # Build and Deploy Backend
      - name: Build and Deploy Backend
        run: |
          cd one-event-be
          
          # Build Docker image
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/backend:latest .
          
          # Push Docker image
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/backend:latest
          
          # Deploy to Cloud Run
          gcloud run deploy one-event-api-test \
            --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/backend:latest \
            --region=${{ env.REGION }} \
            --add-cloudsql-instances=one-event-production:asia-southeast1:one-event-db \
            --set-env-vars="NODE_ENV=production" \
            --set-secrets="DATABASE_URL=one-event-db-url-prod:latest,JWT_SECRET=one-event-jwt-secret-prod:latest" \
            --platform=managed \
            --allow-unauthenticated \
            --max-instances=10 \
            --min-instances=1 \
            --memory=1Gi \
            --cpu=1 \
            --port=8080 \
            --timeout=300s

      # Health Check
      - name: Health Check Backend
        run: |
          echo "Waiting for backend to be ready..."
          sleep 30
          
          BACKEND_URL=$(gcloud run services describe one-event-api-test --region=${{ env.REGION }} --format='value(status.url)')
          echo "Backend URL: $BACKEND_URL"
          
          # Test root endpoint
          echo "Testing root endpoint..."
          curl -f "$BACKEND_URL/" || echo "Root endpoint failed"
          
          # Test health endpoint
          echo "Testing health endpoint..."
          curl -f "$BACKEND_URL/health" || echo "Health endpoint failed"

      # Build and Deploy Frontend
      - name: Build and Deploy Frontend
        run: |
          cd one-event-fe
          
          # Build Docker image
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend:latest .
          
          # Push Docker image
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend:latest
          
          # Deploy to Cloud Run
          gcloud run deploy one-event-frontend-test \
            --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/frontend:latest \
            --region=${{ env.REGION }} \
            --set-env-vars="NODE_ENV=production,NEXT_PUBLIC_API_URL=https://one-event-api-test-712057384144.asia-southeast1.run.app,NEXT_PUBLIC_APP_NAME=OneEvent" \
            --platform=managed \
            --allow-unauthenticated \
            --max-instances=10 \
            --min-instances=1 \
            --memory=512Mi \
            --cpu=1 \
            --port=8080 \
            --timeout=300s

      # Health Check Frontend
      - name: Health Check Frontend
        run: |
          echo "Waiting for frontend to be ready..."
          sleep 30
          
          FRONTEND_URL=$(gcloud run services describe one-event-frontend-test --region=${{ env.REGION }} --format='value(status.url)')
          echo "Frontend URL: $FRONTEND_URL"
          
          # Test frontend endpoint
          echo "Testing frontend..."
          curl -f "$FRONTEND_URL/" || echo "Frontend health check failed"

      - name: Deployment Summary
        run: |
          echo "=== Deployment Summary ==="
          echo "Backend URL: $(gcloud run services describe one-event-api-test --region=${{ env.REGION }} --format='value(status.url)')"
          echo "Frontend URL: $(gcloud run services describe one-event-frontend-test --region=${{ env.REGION }} --format='value(status.url)')"
          echo "=== Deployment Complete ==="

name: Quick Deploy to GCP

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

env:
  PROJECT_ID: one-event-production
  REGION: asia-southeast1
  REPOSITORY: one-event-repo

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Set environment variables
        id: env
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "suffix=prod" >> $GITHUB_OUTPUT
            echo "min_instances=1" >> $GITHUB_OUTPUT
            echo "max_instances=10" >> $GITHUB_OUTPUT
          else
            echo "suffix=dev" >> $GITHUB_OUTPUT
            echo "min_instances=0" >> $GITHUB_OUTPUT
            echo "max_instances=5" >> $GITHUB_OUTPUT
          fi

      # Build and Deploy Backend
      - name: Build and Deploy Backend
        run: |
          cd one-event-be
          
          # Build Docker image
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/one-event-backend:${{ github.sha }} .
          docker tag ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/one-event-backend:${{ github.sha }} \
                     ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/one-event-backend:${{ steps.env.outputs.suffix }}-latest
          
          # Push image
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/one-event-backend:${{ github.sha }}
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/one-event-backend:${{ steps.env.outputs.suffix }}-latest
          
          # Deploy to Cloud Run
          gcloud run deploy one-event-api-${{ steps.env.outputs.suffix }} \
            --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/one-event-backend:${{ github.sha }} \
            --region=${{ env.REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --min-instances=${{ steps.env.outputs.min_instances }} \
            --max-instances=${{ steps.env.outputs.max_instances }} \
            --memory=1Gi \
            --cpu=1 \
            --timeout=300 \
            --set-env-vars="NODE_ENV=${{ steps.env.outputs.suffix == 'prod' && 'production' || 'development' }},PORT=3000" \
            --set-secrets="DATABASE_URL=one-event-db-url-${{ steps.env.outputs.suffix }}:latest,JWT_SECRET=one-event-jwt-secret-${{ steps.env.outputs.suffix }}:latest"

      # Build and Deploy Frontend
      - name: Build and Deploy Frontend
        run: |
          cd one-event-fe
          
          # Build Docker image
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/one-event-frontend:${{ github.sha }} .
          docker tag ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/one-event-frontend:${{ github.sha }} \
                     ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/one-event-frontend:${{ steps.env.outputs.suffix }}-latest
          
          # Push image
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/one-event-frontend:${{ github.sha }}
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/one-event-frontend:${{ steps.env.outputs.suffix }}-latest
          
          # Deploy to Cloud Run
          gcloud run deploy one-event-web-${{ steps.env.outputs.suffix }} \
            --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/one-event-frontend:${{ github.sha }} \
            --region=${{ env.REGION }} \
            --platform=managed \
            --allow-unauthenticated \
            --min-instances=${{ steps.env.outputs.min_instances }} \
            --max-instances=${{ steps.env.outputs.max_instances }} \
            --memory=512Mi \
            --cpu=1 \
            --port=80

      # Health Check
      - name: Health Check
        run: |
          echo "Waiting for services to be ready..."
          sleep 60
          
          # Get service URLs
          BACKEND_URL=$(gcloud run services describe one-event-api-${{ steps.env.outputs.suffix }} --region=${{ env.REGION }} --format="value(status.url)")
          FRONTEND_URL=$(gcloud run services describe one-event-web-${{ steps.env.outputs.suffix }} --region=${{ env.REGION }} --format="value(status.url)")
          
          echo "Backend URL: $BACKEND_URL"
          echo "Frontend URL: $FRONTEND_URL"
          
          # Basic health checks
          curl -f $BACKEND_URL/health || echo "Backend health check failed"
          curl -f $FRONTEND_URL || echo "Frontend health check failed"
          
          # Set URLs as output
          echo "BACKEND_URL=$BACKEND_URL" >> $GITHUB_ENV
          echo "FRONTEND_URL=$FRONTEND_URL" >> $GITHUB_ENV

      # Notify deployment success
      - name: Deployment Summary
        run: |
          echo "ðŸš€ Deployment completed successfully!"
          echo "Environment: ${{ steps.env.outputs.suffix }}"
          echo "Backend: ${{ env.BACKEND_URL }}"
          echo "Frontend: ${{ env.FRONTEND_URL }}"
          echo "Commit: ${{ github.sha }}"

#!/bin/bash

# OneEvent - Simple Manual Setup Guide
# ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏ó‡∏µ‡∏•‡∏∞‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡∏≤‡∏°‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ô‡∏µ‡πâ

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ OneEvent Auto-Deployment Setup Guide${NC}"
echo "=============================================="

print_step() {
    echo -e "\n${BLUE}üìã $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_instruction() {
    echo -e "${YELLOW}üëâ $1${NC}"
}

# Check current status
print_step "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô"

# Check gcloud
if command -v gcloud &> /dev/null; then
    print_success "Google Cloud CLI ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß ($(gcloud --version | head -1))"
    
    # Check if authenticated
    if gcloud auth list --filter=status:ACTIVE --format="value(account)" | grep -q .; then
        GCLOUD_ACCOUNT=$(gcloud auth list --filter=status:ACTIVE --format="value(account)")
        print_success "Authenticated as: $GCLOUD_ACCOUNT"
        GCLOUD_AUTH=true
    else
        print_warning "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ login gcloud"
        GCLOUD_AUTH=false
    fi
else
    print_warning "Google Cloud CLI ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á"
    GCLOUD_AUTH=false
fi

# Check GitHub CLI
if command -v gh &> /dev/null; then
    print_success "GitHub CLI ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß ($(gh --version | head -1))"
    
    # Check if authenticated
    if gh auth status &> /dev/null; then
        GH_USER=$(gh api user --jq .login 2>/dev/null || echo "Unknown")
        print_success "Authenticated as: $GH_USER"
        GH_AUTH=true
    else
        print_warning "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ login GitHub CLI"
        GH_AUTH=false
    fi
else
    print_warning "GitHub CLI ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á"
    GH_AUTH=false
fi

echo ""
echo "=============================================="

# Manual setup instructions
if [ "$GCLOUD_AUTH" = false ]; then
    print_step "‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: Login Google Cloud"
    print_instruction "‡πÄ‡∏õ‡∏¥‡∏î browser ‡πÑ‡∏õ‡∏ó‡∏µ‡πà: https://accounts.google.com/oauth/authorize?..."
    print_instruction "‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: gcloud auth login"
    echo ""
    print_instruction "‡∏Å‡∏î Enter ‡πÄ‡∏°‡∏∑‡πà‡∏≠ login ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß..."
    read -p ""
fi

if [ "$GH_AUTH" = false ]; then
    print_step "‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: Login GitHub"
    print_instruction "1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà https://github.com/settings/tokens/new"
    print_instruction "2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Personal Access Token ‡∏î‡πâ‡∏ß‡∏¢ scopes: repo, workflow, admin:org"
    print_instruction "3. Copy token ‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á:"
    echo "   gh auth login --with-token"
    echo ""
    print_instruction "‡∏Å‡∏î Enter ‡πÄ‡∏°‡∏∑‡πà‡∏≠ login ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß..."
    read -p ""
fi

print_step "‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ GCP Project"

echo -e "${YELLOW}‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡πÉ‡∏ô GCP Console:${NC}"
echo ""
echo "1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà https://console.cloud.google.com/"
echo "2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Project ‡πÉ‡∏´‡∏°‡πà‡∏ä‡∏∑‡πà‡∏≠ 'one-event-production'"
echo "3. ‡πÄ‡∏õ‡∏¥‡∏î Billing ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö project ‡∏ô‡∏µ‡πâ"
echo "4. ‡πÄ‡∏õ‡∏¥‡∏î APIs ‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ:"
echo "   - Cloud Run API"
echo "   - Cloud Build API"
echo "   - Artifact Registry API"
echo "   - Secret Manager API"
echo "   - Cloud SQL Admin API"
echo ""

print_step "‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 4: ‡∏™‡∏£‡πâ‡∏≤‡∏á Service Account"

echo -e "${YELLOW}‡πÉ‡∏ô GCP Console:${NC}"
echo ""
echo "1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà IAM & Admin > Service Accounts"
echo "2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Service Account ‡∏ä‡∏∑‡πà‡∏≠ 'github-actions-sa'"
echo "3. ‡πÉ‡∏´‡πâ Roles ‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ:"
echo "   - Cloud Run Admin"
echo "   - Artifact Registry Admin"
echo "   - Secret Manager Secret Accessor"
echo "   - Service Account User"
echo "4. ‡∏™‡∏£‡πâ‡∏≤‡∏á JSON Key ‡πÅ‡∏•‡∏∞‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î"
echo ""

print_step "‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 5: ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ GitHub Secrets"

echo -e "${YELLOW}‡πÉ‡∏ô GitHub Repository (https://github.com/Chakiss/one-event):${NC}"
echo ""
echo "1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Settings > Secrets and variables > Actions"
echo "2. ‡πÄ‡∏û‡∏¥‡πà‡∏° Repository secrets:"
echo "   - GCP_SA_KEY: (‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå JSON key ‡∏ó‡∏µ‡πà‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏°‡∏≤)"
echo "   - GCP_PROJECT_ID: one-event-production"
echo "   - GCP_REGION: asia-southeast1"
echo ""

print_step "‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 6: ‡∏™‡∏£‡πâ‡∏≤‡∏á Artifact Registry"

echo -e "${YELLOW}‡πÉ‡∏ô GCP Console:${NC}"
echo ""
echo "1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Artifact Registry"
echo "2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Repository ‡πÉ‡∏´‡∏°‡πà:"
echo "   - Name: one-event-repo"
echo "   - Format: Docker"
echo "   - Location: asia-southeast1"
echo ""

print_step "‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Auto-Deployment"

echo -e "${YELLOW}‡πÉ‡∏ô Terminal:${NC}"
echo ""
echo "1. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏∞‡πÑ‡∏£‡∏Å‡πá‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Ñ"
echo "2. ‡∏£‡∏±‡∏ô:"
echo "   git add ."
echo "   git commit -m \"Test auto-deployment\""
echo "   git push origin main"
echo ""
echo "3. ‡πÑ‡∏õ‡∏î‡∏π‡∏ó‡∏µ‡πà GitHub Actions: https://github.com/Chakiss/one-event/actions"
echo "4. ‡∏ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏à‡∏∞‡πÑ‡∏î‡πâ URL ‡∏Ç‡∏≠‡∏á app ‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ô‡∏ö‡∏ô GCP Cloud Run"
echo ""

print_step "üéØ ‡∏™‡∏£‡∏∏‡∏õ"

echo -e "${GREEN}‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß:${NC}"
echo "‚úÖ Push ‡πÑ‡∏õ main branch = Deploy ‡∏Ç‡∏∂‡πâ‡∏ô Production"
echo "‚úÖ Push ‡πÑ‡∏õ develop branch = Deploy ‡∏Ç‡∏∂‡πâ‡∏ô Development"
echo "‚úÖ ‡∏î‡∏π deployment ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà GitHub Actions"
echo "‚úÖ ‡∏î‡∏π services ‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà GCP Cloud Run"
echo ""

print_warning "‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡∏î‡∏π‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà:"
echo "üìñ docs/AUTO_DEPLOYMENT_GUIDE.md"
echo "üöÄ QUICK_START_AUTO_DEPLOY.md"
echo ""

echo -e "${BLUE}üéâ Happy Deploying! üöÄ${NC}"

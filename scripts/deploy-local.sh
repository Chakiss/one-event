#!/bin/bash

# Local deployment script for testing before GCP deployment
set -e

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${GREEN}üè† OneEvent Local Deployment Script${NC}"

# Check Docker
if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker is not installed${NC}"
    exit 1
fi

# Check Docker Compose
if ! command -v docker-compose &> /dev/null; then
    echo -e "${RED}‚ùå Docker Compose is not installed${NC}"
    exit 1
fi

echo -e "${GREEN}üßπ Cleaning up previous containers${NC}"
docker-compose down -v

echo -e "${GREEN}üèóÔ∏è  Building images${NC}"
docker-compose build

echo -e "${GREEN}üöÄ Starting services${NC}"
docker-compose up -d

echo -e "${GREEN}‚è≥ Waiting for services to be ready${NC}"
sleep 30

echo -e "${GREEN}üîç Running health checks${NC}"
# Check backend health
if curl -f http://localhost:8000/health > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Backend is healthy${NC}"
else
    echo -e "${RED}‚ùå Backend health check failed${NC}"
    docker-compose logs backend
    exit 1
fi

# Check frontend
if curl -f http://localhost:3000 > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Frontend is accessible${NC}"
else
    echo -e "${RED}‚ùå Frontend health check failed${NC}"
    docker-compose logs frontend
    exit 1
fi

echo -e "${GREEN}üéâ Local deployment successful!${NC}"
echo ""
echo -e "${GREEN}üîó Services:${NC}"
echo "‚Ä¢ Frontend: http://localhost:3000"
echo "‚Ä¢ Backend API: http://localhost:8000"
echo "‚Ä¢ API Documentation: http://localhost:8000/api"
echo ""
echo -e "${YELLOW}üìã Next steps:${NC}"
echo "‚Ä¢ Test the application functionality"
echo "‚Ä¢ Run integration tests"
echo "‚Ä¢ Check logs: docker-compose logs -f"
echo "‚Ä¢ Stop services: docker-compose down"
